#!/usr/bin/env bash

set -e

BUILD_DIR=$1
CACHE_DIR=$2
BP_DIR=$(cd $(dirname $0); cd ..; pwd)

# make sure dirs exist
mkdir -p ${BUILD_DIR} ${CACHE_DIR}

# load dependencies
source $BP_DIR/lib/output.sh
source $BP_DIR/lib/package.sh

#extract the ETL package to run
header "Unpacking ETL tar file"
install_package ${BUILD_DIR} ${CACHE_DIR} | indent

#create buildpack dir and download dependencies
mkdir -p ${BUILD_DIR}/.pdi-buildpack

echo "-----> Downloading Java..."
echo "       Installing https://download.run.pivotal.io/openjdk/precise/x86_64/openjdk-1.8.0_60.tar.gz to " ${BUILD_DIR}/.pdi-buildpack/open_jdk_jre
curl -s "https://download.run.pivotal.io/openjdk/precise/x86_64/openjdk-1.8.0_60.tar.gz" > ${CACHE_DIR}/openjdk.tar.gz
mkdir ${BUILD_DIR}/.pdi-buildpack/open_jdk_jre
tar xzf ${CACHE_DIR}/openjdk.tar.gz -C ${BUILD_DIR}/.pdi-buildpack/open_jdk_jre

echo "-----> Downloading PDI..."
echo "       Installing https://s3-eu-west-1.amazonaws.com/voxgenbi/pdi-ce-4.4.0-stable.tar.gz to " ${BUILD_DIR}/.pdi-buildpack/pdi
#curl -v -L "http://downloads.sourceforge.net/project/pentaho/Data%20Integration/4.4.0-stable/pdi-ce-4.4.0-stable.tar.gz" > ${CACHE_DIR}/pdi.tar.gz
if [[ ! -f ${CACHE_DIR}/pdi.tar.gz ]]; then
	#curl -s -L "https://s3-eu-west-1.amazonaws.com/voxgenbi/pdi-ce-4.4.0-stable.tar.gz" > ${CACHE_DIR}/pdi.tar.gz
	echo "      Skipping..."
else
	echo "      Using cached file"
fi
mkdir ${BUILD_DIR}/.pdi-buildpack/pdi
#tar xzf ${CACHE_DIR}/pdi.tar.gz -C ${BUILD_DIR}/.pdi-buildpack/pdi

echo "-----> Downloading Liquibase..."
echo "       Installing https://github.com/liquibase/liquibase/releases/download/liquibase-parent-3.4.1/liquibase-3.4.1-bin.tar.gz to " ${BUILD_DIR}/.pdi-buildpack/liquibase
curl -s -L "https://github.com/liquibase/liquibase/releases/download/liquibase-parent-3.4.1/liquibase-3.4.1-bin.tar.gz" > ${CACHE_DIR}/liquibase.tar.gz
mkdir ${BUILD_DIR}/.pdi-buildpack/liquibase
tar xzf ${CACHE_DIR}/liquibase.tar.gz -C ${BUILD_DIR}/.pdi-buildpack/liquibase

echo "-----> Applying auto-reconfiguration"
echo "       Editing kettle.properties"
#edit kettle.properties and move to .kettle dir
mkdir ${BUILD_DIR}/.kettle
mv ${BUILD_DIR}/kettle.properties ${BUILD_DIR}/.kettle/kettle.properties
sed ${BUILD_DIR}/.kettle/kettle.properties -i.bak -e '/ETL_DIR/d'
echo "ETL_DIR=../../.." >> ${BUILD_DIR}/.kettle/kettle.properties

echo "       Editing scripts"
#edit scripts to use pentaho link
cd ${BUILD_DIR}/scripts
grep -RlZ /opt/pentaho * | xargs -0l sed -i.bak -e 's|/opt/pentaho|~/.pdi-buildpack/pdi|g'

echo "       Configuring Pentaho environment"
#add .profile.d script to set environment
mkdir -p ${BUILD_DIR}/.profile.d
cp ${BP_DIR}/profile/* ${BUILD_DIR}/.profile.d/

#edit pentaho env script to source .profile.d
#sed ${BUILD_DIR}/.pdi-buildpack/pdi/data-integration/set-pentaho-env.sh -i.bak -e '/setPentahoEnv/i . ~/.profile.d/setenv.sh'

#copy web proc script
cp ${BP_DIR}/lib/web_proc.sh ${BUILD_DIR}
chmod u+x ${BUILD_DIR}/web_proc.sh

echo "-----> Provisioning databases"
source ${BP_DIR}/lib/database.sh
create_db ${BUILD_DIR}/.kettle/kettle.properties

echo "-----> Staging complete"
